name:  API Content

on:
  workflow_dispatch:
  push:
    branches:
      - api/*

env:
  rg:  ${{ secrets.API_RG }}

jobs:
  deploy:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Define environment
      id:  define-env
      run: |
        branch=$(echo ${GITHUB_REF#refs/heads/})
        echo "Current branch is '$branch'"
        if [ "$branch" = "api/prod" ]
        then
          targetEnv="prod"
        else
          targetEnv="staging"
        fi
        echo "Target environment (targetEnv) '$targetEnv'"
        echo "##[set-output name=targetEnv;]$targetEnv"
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 7.x
    - name: Patch version
      id:  patch-version
      run: python3 deployment/patch-version.py code/DeltaKustoApi/DeltaKustoApi.csproj ${{ github.run_number }}
    # See https://docs.microsoft.com/en-us/dotnet/core/tools/dotnet-restore
    - name: Install dependencies
      run: dotnet restore code/DeltaKustoApi
    # See https://docs.microsoft.com/en-us/dotnet/core/tools/dotnet-build
    - name: Build
      run: dotnet build code/DeltaKustoApi --configuration Release --no-restore
    # See https://docs.microsoft.com/en-us/dotnet/core/tools/dotnet-publish
    - name: .NET Publish Web App
      run: dotnet publish code/DeltaKustoApi --configuration Release --no-build --output web-app
    - name: Look at published folder
      run: ls -l web-app
    # See https://linuxize.com/post/how-to-zip-files-and-directories-in-linux
    # Login
    - name: Azure Login
      run: az login --service-principal -u ${{ secrets.deploy_sp_id }} -p ${{ secrets.deploy_sp_secret }} --tenant ${{ secrets.tenant_id }}
    - name: Install zip
      run: sudo apt install zip
    - name: Zip web-app
      run: |
        cd web-app
        zip -r web-app.zip .
        mv web-app.zip ..
    # Find Web App resource
    - name: Find Web App
      id:  find-web-app
      run: |
        wa=$(az webapp list -g $rg --query "[?tags.env=='${{ steps.define-env.outputs.targetEnv }}'].name" -o tsv)
        echo "Found Web App:  $wa"
        echo "webAppName=$wa" >> $GITHUB_OUTPUT
    # Deploy Web App, see https://learn.microsoft.com/en-us/azure/app-service/deploy-zip?tabs=cli#deploy-a-zip-package
    - name: Deploy
      run: |
        az webapp deployment source config-zip -g $rg -n ${{ steps.find-web-app.outputs.webAppName }} --src web-app.zip
